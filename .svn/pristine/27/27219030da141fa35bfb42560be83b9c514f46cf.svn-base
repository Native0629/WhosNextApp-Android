package com.app.whosnextapp.navigationmenu;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v7.widget.AppCompatTextView;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.VideoView;

import com.app.whosnextapp.R;
import com.app.whosnextapp.apis.PostRequest;
import com.app.whosnextapp.apis.ResponseListener;
import com.app.whosnextapp.drawer.HeaderAllPostActivity;
import com.app.whosnextapp.model.FollowUnfollowModel;
import com.app.whosnextapp.model.GetProfileByCustomerIdModel;
import com.app.whosnextapp.utility.BaseAppCompatActivity;
import com.app.whosnextapp.utility.Constants;
import com.app.whosnextapp.utility.Globals;
import com.google.gson.Gson;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class NotificationProfileActivity extends BaseAppCompatActivity implements View.OnClickListener {
    @BindView(R.id.toolbar)
    Toolbar toolbar;
    @BindView(R.id.settitle)
    AppCompatTextView settitle;
    @BindView(R.id.tv_username)
    TextView tv_username;
    @BindView(R.id.tv_countpost)
    TextView tv_countpost;
    @BindView(R.id.tv_countfollowing)
    TextView tv_countfollowing;
    @BindView(R.id.tv_countfollowers)
    TextView tv_countfollowers;
    @BindView(R.id.ll_private)
    LinearLayout ll_private;
    @BindView(R.id.ll_public)
    LinearLayout ll_public;
    @BindView(R.id.videoView)
    VideoView videoView;
    @BindView(R.id.tv_about_self)
    TextView tv_about_self;
    @BindView(R.id.tv_city)
    TextView tv_city;
    @BindView(R.id.tv_category)
    TextView tv_category;
    @BindView(R.id.tv_views)
    TextView tv_views;
    @BindView(R.id.btn_follow)
    Button btn_follow;

    Globals globals;
    Integer result, actionuserid,cid;
    Boolean isprivate, isfollowing;
    String firstname;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_discover_profile);
        init();
    }

    private void init() {
        ButterKnife.bind(this);
        globals = (Globals) getApplicationContext();
        actionuserid = getIntent().getIntExtra(Constants.WN_ACTIONUSERID, 0);
        doRequestToProfileDetails();
        setActionBar();
    }

    private void setActionBar() {
        toolbar.setBackgroundResource(R.color.red);
        setSupportActionBar(toolbar);
        setTitle("");
        toolbar.setNavigationIcon(R.drawable.backarrow);
        toolbar.setNavigationOnClickListener(this);
    }

    private void doRequestToProfileDetails() {
        final String requestURL = String.format(getString(R.string.get_discover_people_by_customer_id_url), actionuserid);
        new PostRequest(this, null, requestURL, true, true, new ResponseListener() {
            @Override
            public void onSucceedToPostCall(String response) {
                GetProfileByCustomerIdModel getProfileByCustomerIdModel = new Gson().fromJson(response, GetProfileByCustomerIdModel.class);
                if (getProfileByCustomerIdModel != null) {
                    tv_username.setText(getProfileByCustomerIdModel.getCustomerDetail().getUserName());
                    tv_countpost.setText(getProfileByCustomerIdModel.getCustomerDetail().getTotalPost());
                    tv_countfollowers.setText(getProfileByCustomerIdModel.getCustomerDetail().getTotalFollowers());
                    tv_countfollowing.setText(getProfileByCustomerIdModel.getCustomerDetail().getTotalFollowings());
                    videoView.setVideoURI(Uri.parse(getProfileByCustomerIdModel.getCustomerDetail().getBioVideoUrl()));
                    videoView.start();
                    tv_views.setText(String.valueOf(getProfileByCustomerIdModel.getCustomerDetail().getTotalProfileVideoViews()));
                    tv_about_self.setText(String.valueOf(getProfileByCustomerIdModel.getCustomerDetail().getAboutSelf()));
                    tv_city.setText(String.valueOf(getProfileByCustomerIdModel.getCustomerDetail().getCity()));
                    cid=getProfileByCustomerIdModel.getCustomerDetail().getCustomerId();
                    tv_category.setText(getProfileByCustomerIdModel.getCustomerDetail().getCategoryNames());
                    isprivate = getProfileByCustomerIdModel.getCustomerDetail().getIsPrivate();
                    firstname = getProfileByCustomerIdModel.getCustomerDetail().getFirstName() + getProfileByCustomerIdModel.getCustomerDetail().getLastName();
                    settitle.setText(firstname);
                   /* if (!isprivate) {
                        ll_public.setVisibility(View.VISIBLE);
                        ll_private.setVisibility(View.GONE);
                    } else {
                        ll_public.setVisibility(View.GONE);
                        ll_private.setVisibility(View.VISIBLE);
                    }*/
                    isfollowing = getProfileByCustomerIdModel.getCustomerDetail().getIsFollowing();
                    if (!isfollowing) {
                        btn_follow.setVisibility(View.VISIBLE);
                        result = 1;
                    } else {
                        btn_follow.setText(R.string.following);
                        result = 0;
                    }
                } else {
                    Globals.showToast(getApplicationContext(), getString(R.string.msg_server_error));
                }
            }

            @Override
            public void onFailedToPostCall(int statusCode, String msg) {
                Globals.showToast(getApplicationContext(), msg);
            }
        }).execute(globals.getUserDetails().getStatus().getUserId());
    }

    @OnClick(R.id.btn_follow)
    public void onFollowUser() {
        final String requestURL = String.format(getString(R.string.get_follow_user_url), actionuserid, result);
        new PostRequest(this, null, requestURL, true, true, new ResponseListener() {
            @Override
            public void onSucceedToPostCall(String response) {
                FollowUnfollowModel followUnfollowModel = new Gson().fromJson(response, FollowUnfollowModel.class);
                if (followUnfollowModel != null) {
                    btn_follow.setText(R.string.following);
                    doRefreshFollowerCount();
                    if (result == 0) {
                        btn_follow.setText(R.string.follow);
                    }
                } else {
                    Globals.showToast(getApplicationContext(), getString(R.string.msg_server_error));
                }
            }

            @Override
            public void onFailedToPostCall(int statusCode, String msg) {
                Globals.showToast(getApplicationContext(), msg);
            }
        }).execute(globals.getUserDetails().getStatus().getUserId());
    }

    public void doRefreshFollowerCount() {
        final String requestURL = String.format(getString(R.string.get_discover_people_by_customer_id_url), actionuserid);
        new PostRequest(this, null, requestURL, true, true, new ResponseListener() {
            @Override
            public void onSucceedToPostCall(String response) {
                GetProfileByCustomerIdModel getProfileByCustomerIdModel = new Gson().fromJson(response, GetProfileByCustomerIdModel.class);
                if (getProfileByCustomerIdModel != null) {
                    tv_countfollowers.setText(getProfileByCustomerIdModel.getCustomerDetail().getTotalFollowers());
                    isfollowing = getProfileByCustomerIdModel.getCustomerDetail().getIsFollowing();
                    if (!isfollowing) {
                        btn_follow.setVisibility(View.VISIBLE);
                        result = 1;
                    } else {
                        btn_follow.setText(R.string.following);
                        result = 0;
                    }
                } else {
                    Globals.showToast(getApplicationContext(), getString(R.string.msg_server_error));
                }
            }
            @Override
            public void onFailedToPostCall(int statusCode, String msg) {
                Globals.showToast(getApplicationContext(), msg);
            }
        }).execute(globals.getUserDetails().getStatus().getUserId());
    }

    @OnClick(R.id.ll_followers)
    public void onFollowerClick() {
        Intent intent = new Intent(this, FollowerActivity.class);
        intent.putExtra(Constants.WN_CUSTOMERID, cid);
        startActivity(intent);
    }

    @OnClick(R.id.ll_followings)
    public void onFollowingClick() {
        Intent intent = new Intent(this, FollowingActivity.class);
        intent.putExtra(Constants.WN_CUSTOMERID, cid);
        startActivity(intent);
    }

    @OnClick(R.id.ll_Posts)
    public void onPostClick() {
        Intent intent = new Intent(this, HeaderAllPostActivity.class);
        intent.putExtra(Constants.WN_CUSTOMERID, cid);
        startActivity(intent);
    }

    @Override
    public void onClick(View v) {
        onBackPressed();
    }
}


