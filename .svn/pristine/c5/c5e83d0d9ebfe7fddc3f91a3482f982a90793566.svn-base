package com.app.whosnextapp.feedpost;


import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.app.whosnextapp.R;
import com.app.whosnextapp.apis.ConnectionDetector;
import com.app.whosnextapp.apis.PostRequest;
import com.app.whosnextapp.apis.ResponseListener;
import com.app.whosnextapp.model.GetAllPostByCustomerIDModel;
import com.app.whosnextapp.notification.NotificationActivity;
import com.app.whosnextapp.pictures.SelectImageActivity;
import com.app.whosnextapp.pictures.SelectVideoActivity;
import com.app.whosnextapp.utility.Constants;
import com.app.whosnextapp.utility.Globals;
import com.google.gson.Gson;

import java.util.ArrayList;

import butterknife.BindView;
import butterknife.ButterKnife;

public class TabMediaFragment extends Fragment implements AllPostAdapter.OnItemClick {
    @BindView(R.id.rv_pictures)
    RecyclerView rv_Pictures;
    Globals globals;
    AllPostAdapter allPostAdapter;
    int customerId;
    String requestURL;

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.fragment_tab_media, container, false);
        ButterKnife.bind(this, v);
        setHasOptionsMenu(true);
        init();
        return v;
    }

    public void init() {
        if (getActivity() != null) {
            globals = (Globals) getActivity().getApplicationContext();
            if (getActivity().getIntent() != null && getActivity().getIntent().hasExtra(Constants.WN_CUSTOMER_ID)) {
                customerId = getActivity().getIntent().getIntExtra(Constants.WN_CUSTOMER_ID, 0);
                requestURL = String.format(getString(R.string.get_all_post_by_other_customerId), 1, customerId);
            } else {
                requestURL = String.format(getString(R.string.get_all_postBy_CustomerID), 1);
            }
        }
        doRequestForGetPost();
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        super.onCreateOptionsMenu(menu, inflater);
        inflater.inflate(R.menu.home_page_menu, menu);
    }

    @Override
    public void onPrepareOptionsMenu(Menu menu) {
        menu.findItem(R.id.header_bell).setVisible(true);
        menu.findItem(R.id.header_refresh).setVisible(true);
        menu.findItem(R.id.header_search).setVisible(false);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.header_refresh:
                doRequestForGetPost();
                break;
            case R.id.header_bell:
                startActivity(new Intent(getContext(), NotificationActivity.class));
                break;
        }
        return false;
    }

    public void setCommentAdapter(ArrayList<GetAllPostByCustomerIDModel.PostList> posts) {
        if (allPostAdapter == null) {
            allPostAdapter = new AllPostAdapter(getActivity(), this);
        }
        if (rv_Pictures.getAdapter() == null) {
            rv_Pictures.setHasFixedSize(true);
            rv_Pictures.setLayoutManager(new GridLayoutManager(getActivity(), 3));
            rv_Pictures.setAdapter(allPostAdapter);
        }
        allPostAdapter.doRefresh(posts);
    }

    public void doRequestForGetPost() {
        if (!ConnectionDetector.internetCheck(getActivity(), false))
            return;

        new PostRequest(getActivity(), null, requestURL, true, true, new ResponseListener() {
            @Override
            public void onSucceedToPostCall(String response) {
                GetAllPostByCustomerIDModel getAllPostByCustomerIDModel = new Gson().fromJson(response, GetAllPostByCustomerIDModel.class);
                if (getAllPostByCustomerIDModel != null && getAllPostByCustomerIDModel.getPostLists() != null && !getAllPostByCustomerIDModel.getPostLists().isEmpty()) {
                    setCommentAdapter(getAllPostByCustomerIDModel.getPostLists());
                }
            }

            @Override
            public void onFailedToPostCall(int statusCode, String msg) {
                Globals.showToast(getActivity(), msg);
            }
        }).execute(globals.getUserDetails().getStatus().getUserId());
    }

    @Override
    public void selectImage(GetAllPostByCustomerIDModel.PostList postList) {
        if(postList.getIsImage()){
            Intent intent = new Intent(getActivity(), SelectImageActivity.class);
            intent.putExtra(Constants.WN_POSTS_URL, postList.getPostUrl());
            intent.putExtra(Constants.WN_POST_ID, String.valueOf(postList.getPostId()));
            intent.putExtra(Constants.WN_IS_IMAGE, postList.getIsImage());
            intent.putExtra(Constants.WN_TOTAL_LIKES, postList.getTotalLikes());
            startActivity(intent);

        }else
        {
            Intent intent = new Intent(getActivity(), SelectVideoActivity.class);
            intent.putExtra(Constants.WN_POSTS_URL, postList.getPostUrl());
            intent.putExtra(Constants.WN_POST_ID, String.valueOf(postList.getPostId()));
            intent.putExtra(Constants.WN_IS_IMAGE, postList.getIsImage());
            intent.putExtra(Constants.WN_TOTAL_LIKES, postList.getTotalLikes());
            startActivity(intent);
        }
    }
}
