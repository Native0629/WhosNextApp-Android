package com.app.whosnextapp.feedpost;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.RecyclerView;

import com.app.whosnextapp.R;
import com.app.whosnextapp.model.GetAllPostByCustomerIDModel;
import com.bumptech.glide.Glide;

import java.util.ArrayList;

import butterknife.BindView;
import butterknife.ButterKnife;

public class AllPostAdapter extends RecyclerView.Adapter<AllPostAdapter.postHolder> {

    public Context context;
    private ArrayList<GetAllPostByCustomerIDModel.PostList> postList;
    private OnItemClick onItemClick;

    public AllPostAdapter(Context context, OnItemClick onItemClick) {
        this.context = context;
        this.onItemClick = onItemClick;
    }

    public void doRefresh(ArrayList<GetAllPostByCustomerIDModel.PostList> postList) {
        this.postList = postList;
        notifyDataSetChanged();
    }

    @NonNull
    @Override
    public postHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
        View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.list_pictures, viewGroup, false);
        return new AllPostAdapter.postHolder(v);
    }

    @Override
    public void onBindViewHolder(@NonNull postHolder postHolder, int i) {
        postHolder.setPostData(postList.get(i), i);
    }

    @Override
    public int getItemCount() {
        if (postList != null) {
            return postList.size();
        }
        return 0;
    }

    public interface OnItemClick {
        void selectImage(GetAllPostByCustomerIDModel.PostList postList);
    }

    class postHolder extends RecyclerView.ViewHolder {
        @BindView(R.id.iv_uploadImage)
        AppCompatImageView iv_uploadImage;
        @BindView(R.id.iv_volume)
        AppCompatImageView iv_volume;

        postHolder(@NonNull View itemView) {
            super(itemView);
            ButterKnife.bind(this, itemView);
        }

        void setPostData(final GetAllPostByCustomerIDModel.PostList postList, final int i) {
            if (postList.getIsImage()) {
                Glide.with(context).load(postList.getPostUrl()).into(iv_uploadImage);
                iv_volume.setVisibility(View.GONE);

            } else {
                Glide.with(context).load(postList.getVideoThumbnailUrl()).into(iv_uploadImage);
                iv_volume.setVisibility(View.VISIBLE);
            }
            iv_uploadImage.setOnClickListener(v -> {
                if (onItemClick != null) {
                    onItemClick.selectImage(postList);
                }
            });
        }
    }
}
