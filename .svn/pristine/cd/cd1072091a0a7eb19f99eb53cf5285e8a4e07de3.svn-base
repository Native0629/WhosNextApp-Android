package com.app.whosnextapp.navigationmenu;

import android.content.Context;
import android.support.annotation.NonNull;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.app.whosnextapp.R;
import com.app.whosnextapp.model.NotificationModel;
import com.app.whosnextapp.utility.TimeUtils;
import com.bumptech.glide.Glide;

import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;
import de.hdodenhof.circleimageview.CircleImageView;

public class NotificationAdapter extends RecyclerView.Adapter<NotificationAdapter.ViewHolder> {
    private Context context;
    private List<NotificationModel.ActivityList> notificationModels;
    private OnCustomClickListner onCustomClickListner;

    NotificationAdapter(Context context, OnCustomClickListner onCustomClickListner) {
        this.onCustomClickListner = onCustomClickListner;
        this.context = context;
    }

    void doRefresh(List<NotificationModel.ActivityList> notificationModel) {
        notificationModels = notificationModel;
        notifyDataSetChanged();
    }

    @NonNull
    @Override
    public NotificationAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
        View view = LayoutInflater.from(viewGroup.getContext())
                .inflate(R.layout.notification_item_list, viewGroup, false);
        return new ViewHolder(view, this);
    }

    @Override
    public void onBindViewHolder(@NonNull NotificationAdapter.ViewHolder viewHolder, int i) {
        NotificationModel.ActivityList activityList = notificationModels.get(i);
        try {
            viewHolder.setDataToView(activityList, i);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public int getItemCount() {
        return notificationModels.size();
    }

    public interface OnCustomClickListner {
        void onClickProfile(int position, View v);

        void onClickUserName(int position, View v);
    }

    class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
        @BindView(R.id.iv_profile)
        CircleImageView iv_profile;
        @BindView(R.id.tv_name)
        TextView tv_name;
        @BindView(R.id.tv_time)
        TextView tv_time;
        @BindView(R.id.tv_message)
        TextView tv_message;
        @BindView(R.id.iv_post)
        ImageView iv_post;
        @BindView(R.id.tv_follow)
        TextView tv_follow;
        Boolean isfollowing;

        ViewHolder(@NonNull View itemView, final NotificationAdapter notificationAdapter) {
            super(itemView);
            ButterKnife.bind(this, itemView);
            iv_profile.setOnClickListener(this);
            tv_name.setOnClickListener(this);
        }

        void setDataToView(NotificationModel.ActivityList activityList, int i) {
            Glide.with(context)
                    .load(activityList.getProfilePicUrl())
                    .into(iv_profile);
            tv_name.setText(activityList.getUserName());
            tv_message.setText(activityList.getActivityMessage());
            tv_time.setText(TimeUtils.getTimeDiff(context, Long.parseLong(activityList.getTimeDiff())));

            isfollowing = activityList.getIsFollowing();

            if (!activityList.getUrl().isEmpty()) {
                Glide.with(context)
                        .load(activityList.getUrl())
                        .into(iv_post);
                iv_post.setVisibility(View.VISIBLE);
                tv_follow.setVisibility(View.GONE);
                return;
            } else {
                iv_post.setVisibility(View.GONE);
            }
            if (isfollowing) {
                tv_follow.setText(R.string.following);
                tv_follow.setVisibility(View.VISIBLE);
            } else {
                tv_follow.setTextColor(context.getResources().getColor(R.color.sky));
                tv_follow.setBackgroundResource(R.drawable.border_follow);
                tv_follow.setText(R.string.follow);
                tv_follow.setVisibility(View.VISIBLE);
            }
        }

        @Override
        public void onClick(View v) {
            if (v != null) {
                switch (v.getId()) {
                    case R.id.iv_profile:
                        onCustomClickListner.onClickProfile(getAdapterPosition(), v);
                        break;
                    case R.id.tv_name:
                        onCustomClickListner.onClickUserName(getAdapterPosition(), v);
                        break;
                }
            }
        }
    }
}
